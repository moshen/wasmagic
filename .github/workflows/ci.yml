name: "CI"
on: [push]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set variables
        run: |
          NODE_VERSION="$(< .nvmrc)"
          echo "NODE_VERSION=$NODE_VERSION" >> $GITHUB_ENV
          EMSDK_VERSION="$(awk 'NR==1{ match($0, /emsdk:([0-9.]*)$/, a);  print a[1]; }' Dockerfile.Builder)"
          echo "EMSDK_VERSION=$EMSDK_VERSION" >> $GITHUB_ENV

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist
          key: cache-build-artifacts-${{ github.sha }}

      - uses: mymindstorm/setup-emsdk@v10
        with:
          version: ${{ env.EMSDK_VERSION }}

      - name: Setup build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends autoconf automake libtool

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Build and Test
        run: make fmt-check lint-check test package

  matrix-tests:
    name: Test Node versions
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node_version: [16, 18, 20]
    steps:
      - uses: actions/checkout@v2

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist
          key: cache-build-artifacts-${{ github.sha }}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node_version }}

      - name: Install dependencies
        run: npm install glob@"$(jq -r .devDependencies.glob package.json)" jest@"$(jq -r .devDependencies.jest package.json)"

      - name: Test
        run: |
          node --version
          make matrix-test

  publish:
    name: Publish
    environment: Publish
    needs: [build, matrix-tests]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' )
    steps:
      - uses: actions/checkout@v2

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: dist
          key: cache-build-artifacts-${{ github.sha }}

      - name: Publish
        uses: moshen/merge-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
